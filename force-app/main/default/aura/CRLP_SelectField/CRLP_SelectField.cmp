<!--
    Copyright (c) 2018, Salesforce.org
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Salesforce.org nor the names of
      its contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.
-->
<!--
  @author Salesforce.org
  @date 2018
  @group Rollups
  @group-content ../../ApexDocContent/Rollups2.htm
  @description Component used to toggle read only fields for consistent styling and to clarify user options.
-->

<aura:component description="CRLP_SelectField">

    <!-- private attributes -->
    <aura:attribute name="isReadOnly" type="Boolean"/>
    <aura:attribute name="auraId" type="String"
                    description="Id label to be used for aura:id for view and select. Also identifies the type of field."/>
    <aura:attribute name="fieldLabel" type="String" description="Label for the rollup__mdt field"/>
    <aura:attribute name="entityLabel" type="String" description="Label of the selected entity"/>
    <aura:attribute name="apiName" type="String" description="API name of the selected entity"/>
    <aura:attribute name="options" type="List" description="List of entities to be displayed in the select list"/>
    <aura:attribute name="mediumDeviceSize" type="Integer" default="6"
                    description="Controls the number of items per row on a medium device"/>
    <aura:attribute name="isRequired" type="Boolean" default="" description="Sets the required flag on the field"/>
    <aura:attribute name="hasNullOption" type="Boolean" default="true"
                    description="Optional parameter to include the first null option in a list"/>
    <aura:attribute name="helpText" type="String" default="Example text"
                    description="Help text to describe the field and its requirements"/>

    <!-- events we handle -->
    <aura:handler event="ltng:sendMessage" action="{!c.handleMessage}"/>

    <lightning:layoutItem padding="around-medium" mediumDeviceSize="{!v.mediumDeviceSize}" size="12">
        <aura:if isTrue="{!v.isReadOnly}">
            <lightning:input aura:id="inputField"
                             label="{!v.fieldLabel}"
                             name="{!v.fieldLabel}"
                             value="{!v.entityLabel}"
                             readonly="true"/>
            <aura:set attribute="else">

                <c:CRLP_Tooltip helpText="{!v.helpText}" fieldLabel="{!v.fieldLabel}" isRequired="{!v.isRequired}"/>
                <lightning:select aura:id="selectField" class="rollupField hasTooltip"
                                  name="{!v.fieldLabel}"
                                  label="{!v.fieldLabel}"
                                  value="{!v.apiName}"
                                  required="{!v.isRequired}"
                                  onchange="{!c.changeField}"
                                  variant="label-hidden">

                    <aura:if isTrue="{!v.hasNullOption}">
                        <option value="" text=""/>
                    </aura:if>

                    <aura:iteration items="{!v.options}" var="option">
                        <option value="{!option.name}" text="{!option.label}"
                                selected="{!option.name == v.apiName}"/>
                    </aura:iteration>
                </lightning:select>
            </aura:set>
        </aura:if>
    </lightning:layoutItem>

</aura:component>
