<apex:component controller="UTIL_SoqlListView_CTRL" allowDml="true" >

<!-- assume consumer includes jquery. 
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
-->

    <style>
        .PagerUI { font-size: 8pt; }
        .SelectedAlphaFilter { background-color:lightblue; }
        .AlphaFilter { 
            text-decoration:none;
            padding: 0 5px; 
        }
        
    </style>
    
    <script type="text/javascript">
        var j$ = jQuery.noConflict();
        
        // function to check/uncheck all soqllistview items
        function CheckAllSLVObj(checked) {
            j$(".cbxSLVObj").prop("checked", checked);
        }
    
    </script>

    <apex:attribute name="SoqlListViewConsumer" type="UTIL_iSoqlListViewConsumer" assignTo="{!pageController}" required="true"  
        description="the controller of the page" />

    <apex:outputPanel id="panelData">
        
        <apex:actionStatus id="statusLoad" onstart="document.getElementById('divLoading').style.display='inline';" onstop="document.getElementById('divLoading').style.display='none';" />
        <div class="loading clsLoading" id="divLoading" style="display:none" >
          <p style="vertical-align: middle;" >
            <img src="/img/loading.gif" alt="{!$Label.labelMessageLoading}" width="16" height="16" title="{!$Label.labelMessageLoading}" style="vertical-align: middle;"/>
            <span class="loadingText" style="vertical-align: middle;" >{!$Label.labelMessageLoading}</span>
          </p>
        </div>                                                                          
        
        <div>
            <table class="PagerUI" >
                <tr>
                    <td style="vertical-align:middle;">
                        <apex:panelGrid columns="10" > 
                            <apex:outputText value="" />
                            <apex:commandLink action="{!setCon.first}" rerender="panelData" status="statusLoad" >{!$Label.labelListViewFirst}</apex:commandlink>
                            <apex:outputText value=" | " />
                            <apex:commandLink action="{!setCon.previous}" rerender="panelData" status="statusLoad" rendered="{!setCon.HasPrevious}">{!$Label.labelListViewPrevious}</apex:commandlink> 
                            <apex:outputText rendered="{!setCon.HasPrevious}" value=" | " />
                            <apex:commandLink action="{!setCon.next}" rerender="panelData" status="statusLoad" rendered="{!setCon.HasNext}">{!$Label.labelListViewNext}</apex:commandlink>
                            <apex:outputText rendered="{!setCon.HasNext}" value=" | " />
                            <apex:commandLink action="{!setCon.last}" rerender="panelData" status="statusLoad" >{!$Label.labelListViewLast}</apex:commandlink>
                            <apex:outputText value="" />
                            <apex:outputText value="{!$Label.labelListViewPageInfo}" escape="false" >
                                <apex:param value="{!setCon.PageNumber}" />
                                <apex:param value="{!NumberOfPages}" />
                                <apex:param value="{!NumberOfItems}" />
                            </apex:outputText> 
                        </apex:panelGrid>  
                    </td>
                    <td style="vertical-align:middle; text-align:right;" >
                        <apex:repeat value="{!listAlphaFilters}" var="a" > 
                            <apex:commandLink action="{!AlphaFilter}" rerender="panelData" status="statusLoad" styleClass="AlphaFilter {!IF(strAlphaFilter=a,'SelectedAlphaFilter','')}" value="{!a}" >
                                <apex:param assignTo="{!strAlphaFilter}" name="strAlphaFilter" value="{!a}" /> 
                            </apex:commandLink>|
                        </apex:repeat>         
                        <apex:commandLink action="{!AlphaFilter}" rerender="panelData" status="statusLoad" styleClass="AlphaFilter {!IF(strAlphaFilter='%','SelectedAlphaFilter','')}" value="All" >
                            <apex:param assignTo="{!strAlphaFilter}" value="%" /> 
                        </apex:commandLink>&nbsp;
                    </td>
                </tr>
            </table>
            <table style="table-layout:fixed; width:100%" class="slds-table slds-table_bordered slds-no-row-hover" >
                <thead>
                    <tr class="slds-text-heading_label">
                        <apex:outputText rendered="{!showCheckboxes}">
                            <th scope="col" class="slds-cell-shrink">
                                <input type="checkbox" name="cbxContactAll" id="cbxAll" onchange="CheckAllSLVObj(this.checked);" />
                                <span class="slds-assistive-text">Select All</span>
                            </th>
                        </apex:outputText>
                        <th scope="col" class="slds-is-sortable">
                            <label class="slds-truncate">
                                <apex:commandLink action="{!SortItem}" rerender="panelData" status="statusLoad" value="{!$ObjectType.Error__c.Fields[pageController.strNameField].Label}" >
                                    <apex:param assignTo="{!SortItemField}" name="SortItemField" value="{!pageController.strNameField}" />
                                    <apex:outputText style="font-size:1.0em;font-weight:bold;font-family:symbol" 
                                        value="{!IF(SortItemField=pageController.strNameField, IF(SortItemAsc, ' ↑' , ' ↓'), '')}" escape="false" />
                                </apex:commandLink>
                            </label>
                            <span class="slds-assistive-text">Sort</span>
                        </th>
                        <apex:repeat value="{!pageController.strFields}" var="f" > 
                            <apex:outputText rendered="{!f != pageController.strNameField}" >
                                <th style="max-width: 10%">
                                    <apex:outputText value="{!$ObjectType.Error__c.Fields[f].Label}" rendered="{!!$ObjectType.Error__c.Fields[f].filterable}" />
                                    <apex:commandLink action="{!SortItem}" rerender="panelData" status="statusLoad" value="{!$ObjectType.Error__c.Fields[f].Label}" rendered="{!$ObjectType.Error__c.Fields[f].filterable}" >
                                        <apex:param assignTo="{!SortItemField}" name="SortItemField" value="{!f}" />
                                        <apex:outputText style="font-size:1.0em;font-weight:bold;font-family:symbol" 
                                            value="{!IF(SortItemField=f, IF(SortItemAsc, ' ↑' , ' ↓'), '')}" escape="false" />
                                    </apex:commandLink>
                                </th>
                            </apex:outputText> 
                        </apex:repeat>         
                    </tr>
                </thead>
                <tbody>
                    <apex:repeat value="{!listSLVObj}" var="item" rows="{!cRecordsPerPage}" >
                        <tr>
                            <apex:outputText rendered="{!showCheckboxes}">
                                <td class="slds-cell-shrink">
                                    <apex:inputCheckbox value="{!item.checked}" styleClass="slds-checkbox cbxSLVObj" />
                                </td>
                            </apex:outputText>
                            <td class="slds-text-body_small">
                                <apex:outputLink value="/{!item.sobj['id']}" >
                                    <apex:outputField value="{!item.sobj[pageController.strNameField]}" />
                                </apex:outputLink>
                            </td>
                            <apex:repeat value="{!pageController.strFields}" var="f2" > 
                                <apex:outputText rendered="{!f2 != pageController.strNameField}" >
                                    <td style="word-wrap: break-word" class="slds-cell-wrap slds-text-body_small">
                                        <apex:outputText value="{!item.err[f2]}" />
                                    </td>
                                </apex:outputText>
                            </apex:repeat>
                        </tr>
                    </apex:repeat>
               </tbody>
            </table>
            <div class="PagerUI">
                <apex:panelGrid columns="12" > 
                    <apex:outputText value="" />
                    <apex:commandLink action="{!setCon.first}" rerender="panelData" status="statusLoad" >{!$Label.labelListViewFirst}</apex:commandlink>
                    <apex:outputText value=" | " />
                    <apex:commandLink action="{!setCon.previous}" rerender="panelData" status="statusLoad" rendered="{!setCon.HasPrevious}">{!$Label.labelListViewPrevious}</apex:commandlink> 
                    <apex:outputText rendered="{!setCon.HasPrevious}" value=" | " />
                    <apex:commandLink action="{!setCon.next}" rerender="panelData" status="statusLoad" rendered="{!setCon.HasNext}">{!$Label.labelListViewNext}</apex:commandlink>
                    <apex:outputText rendered="{!setCon.HasNext}" value=" | " />
                    <apex:commandLink action="{!setCon.last}" rerender="panelData" status="statusLoad" >{!$Label.labelListViewLast}</apex:commandlink>
                    <apex:outputText value="" />
                    <apex:outputText value="{!$Label.labelListViewPageInfo}" escape="false" >
                        <apex:param value="{!setCon.PageNumber}" />
                        <apex:param value="{!NumberOfPages}" />
                        <apex:param value="{!NumberOfItems}" />
                    </apex:outputText> 
                    <apex:outputText value="" />
                    <apex:commandLink action="{!showMoreRecordsPerPage}" rerender="panelData" status="statusLoad" >{!$Label.labelShowMore}</apex:commandlink>                   
                </apex:panelGrid> 
            </div>
        </div>
    </apex:outputPanel>
</apex:component>