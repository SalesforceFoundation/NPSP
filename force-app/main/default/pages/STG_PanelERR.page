<apex:page controller="STG_PanelERR_CTRL" docType="html-5.0" standardStylesheets="false">

    <script>
        /*
         * We are using JavaScript instead of the Rerender atrribute of Visualforce components because of the
         * impossibility to rerender elements based on a specific dropdown (apex:selectList) value.
         */
        var errNotif = {}
        var errHandling = {}
        jerr$ = jQuery.noConflict();

        errNotif.hideNotifDisplayName = function() { jerr$('[id$=errorNotifDisplayName]').hide(); }
        errNotif.showNotifDisplayName = function() { jerr$('[id$=errorNotifDisplayName]').show(); }

        errNotif.hideNotifDropDown = function() { jerr$('select[id$=notificationOption]').hide(); }
        errNotif.showNotifDropDown = function() { jerr$('select[id$=notificationOption]').show(); }

        errNotif.hideChatterGroupBox =  function() { jerr$('span[id$=chatterGroupBox]').hide(); }
        errNotif.showChatterGroupBox = function() { jerr$('span[id$=chatterGroupBox]').show(); }

        errHandling.disabled = function() {
            jerr$('[id$=cbxENO]').prop('checked', false);
            jerr$('[id$=cbxSEO]').prop('checked', false);
        }

        errHandling.enabled = function() {
            jerr$('[id$=cbxENO]').prop('checked', true);
            jerr$('[id$=cbxSEO]').prop('checked', true);
        }

        //initially hiding the auto-complete chatter group textarea
        jerr$(document).ready(function() {
            errNotif.hideNotifDropDown();
            errNotif.hideChatterGroupBox();
        });

        //detecting click action on edit button
        /*jerr$(document).on('click', 'input[id$=editNotif]', function() {
            var errorNotifDisplay = jerr$('[id$=errorNotifDisplayName]').text();
            console.log('Text of errorNotifDisplayName box: ' + errorNotifDisplay);
            errNotif.hideNotifDisplayName();
            errNotif.showNotifDropDown();
            if(errorNotifDisplay.indexOf('Group:') >= 0) {
                jerr$('select[id$=notificationOption]').val('Chatter Group');
                errNotif.showChatterGroupBox();
            }
        });*/

        //detecting changes to the recipients drop-down
        jerr$(document).on('change', 'select[id$=notificationOption]', function() {
            if(jerr$('select[id$=notificationOption]').find(':selected').text() == 'Chatter Group') {
                errNotif.showChatterGroupBox();
            } else {
                errNotif.hideChatterGroupBox();
            }
        });

        //detecting click action on save button
        jerr$(document).on('click', 'input[id$=saveNotif]', function() {
            var dropDownValue = jerr$('select[id$=notificationOption]').find(':selected').text();
            console.log('Dropdown value: ' + dropDownValue);
            var chatterGroupId = jerr$.trim(jerr$('input[id$=groupId]').val());
            console.log('Chatter group Id: ' + chatterGroupId);
            if(dropDownValue != 'Chatter Group' || (dropDownValue == 'Chatter Group' && chatterGroupId.length > 0)) {
                errNotif.hideChatterGroupBox();
            }
            errNotif.showNotifDisplayName();
        });

        //detecting click action on cancel button
        jerr$(document).on('click', 'input[id$=cancelNotif]', function() {
            //errNotif.hideNotifDropDown();
            errNotif.hideChatterGroupBox();
        });

        //detecting click on disabling error handling checkbox
        jerr$(document).on('click', 'input[id$=cbxDEH]', function() {
            if(jerr$(this).is(':checked')) {
                errHandling.disabled();
            } else {
                errHandling.enabled();
            }
        });

        //detecting click on storing errors checkbox
        jerr$(document).on('click', 'input[id$=cbxSEO]', function() {
            //if store errors is unchecked, we also have to uncheck error notifications
            if(!jerr$(this).is(':checked')) {
                jerr$('[id$=cbxENO]').prop('checked', false);
            }
        });

        //detecting click on error notifications checkbox
        jerr$(document).on('click', 'input[id$=cbxENO]', function() {
            //if error notifications checkbox is checked, we also have to check storing errors
            if(jerr$(this).is(':checked')) {
                jerr$('[id$=cbxSEO]').prop('checked', true);
            }
        });
    </script>
    <apex:form id="form" styleClass="slds-m-around_x-large">
        <c:STG_PageHeader sectionLabel="{!$Label.stgNavSystem}" pageLabel="{!$Label.stgNavErrorNotify}" />
        <c:UTIL_PageMessages />
        <apex:outputPanel id="saveError" style="padding-left:25%; font-weight:bold; color: red;">
            <apex:outputPanel rendered="{!NOT(ISNULL(saveErrorMessage))}">
                <apex:outputText value="{!saveErrorMessage}" />
            </apex:outputPanel>
        </apex:outputPanel>
        <apex:outputPanel id="fields">
            <div class="slds-grid slds-grid_align-center slds-grid_vertical-align-center slds-m-around_large">
                <apex:commandButton id="editNotif" value="{!$Label.stgBtnEdit}" status="statusLoad" action="{!editSettings}" rendered="{!isReadOnlyMode}" immediate="true" rerender="fields, commandButtons, saveError" styleClass="slds-button slds-button_small slds-button_neutral" />
            </div>
            <div class="slds-form_horizontal">
                <div class="slds-form-element">
                    <apex:outputLabel value="{!$ObjectType.Error_Settings__c.Fields.Store_Errors_On__c.Label}" for="cbxSEO" styleClass="slds-form-element__label" />
                    <div class="slds-form-element__control">
                        <apex:inputCheckbox value="{!stgService.stgErr.Store_Errors_On__c}" rendered="{!isEditMode}" id="cbxSEO" html-aria-describedby="{!$Component.cbxSEOHelp}" styleClass="slds-checkbox"/>
                        <apex:inputCheckbox value="{!stgService.stgErr.Store_Errors_On__c}" rendered="{!isReadOnlyMode}" disabled="true" id="cbxSEOO" html-aria-describedby="{!$Component.cbxSEOHelp}" styleClass="slds-checkbox"/>
                        <apex:outputPanel id="cbxSEOHelp" layout="block">
                            <apex:outputText styleClass="slds-form-element__help" value="{!$Label.stgHelpStoreErrorsOn}" />
                        </apex:outputPanel>
                    </div>
                </div>
                <div class="slds-form-element">
                    <apex:outputLabel value="{!$ObjectType.Error_Settings__c.Fields.Error_Notifications_On__c.Label}" for="cbxENO" styleClass="slds-form-element__label" />
                    <div class="slds-form-element__control">
                        <apex:inputCheckbox value="{!stgService.stgErr.Error_Notifications_On__c}" rendered="{!isEditMode}" id="cbxENO" html-aria-describedby="{!$Component.cbxENOHelp}" styleClass="slds-checkbox" />
                        <apex:inputCheckbox value="{!stgService.stgErr.Error_Notifications_On__c}" rendered="{!isReadOnlyMode}" disabled="true" id="cbxENOO" html-aria-describedby="{!$Component.cbxENOHelp}" styleClass="slds-checkbox" />
                        <apex:outputPanel id="cbxENOHelp" layout="block">
                            <apex:outputText styleClass="slds-form-element__help" value="{!$Label.stgHelpErrorNotifyOn}" />
                        </apex:outputPanel>
                    </div>
                </div>
                <div class="slds-form-element">
                    <apex:outputLabel id="recipientLabel" value="{!$ObjectType.Error_Settings__c.Fields.Error_Notifications_To__c.Label}" for="notificationOption" styleClass="slds-form-element__label" />
                    <div class="slds-form-element__control">
                        <apex:outputPanel id="errRecipient">
                            <apex:outputText id="errorNotifDisplayName" value="{!strErrorNotifDisplayName}" rendered="{!isReadOnlyMode}" styleClass="slds-form-element__static"/>
                            <apex:selectList id="notificationOption" value="{!notificationToDropDown}" size="1" multiselect="false" rendered="{!isEditMode}" html-aria-describedby="{!$Component.notificationOptionHelp}" styleClass="slds-select">
                                <apex:selectOptions value="{!listSOERRNotifOptions}" />
                            </apex:selectList>
                        </apex:outputPanel>
                        <apex:outputPanel id="notificationOptionHelp" layout="block">
                            <apex:outputText styleClass="slds-form-element__help" id="recipientHelp" value="{!$Label.stgHelpErrorNotifyTo}" />
                       </apex:outputPanel>
                    </div>
               </div>
               <div class="slds-form-element">
                    <apex:outputLabel value="{!$ObjectType.Error_Settings__c.Fields.Respect_Duplicate_Rule_Settings__c.Label}" for="cbxAllowDupes" styleClass="slds-form-element__label" />
                    <div class="slds-form-element__control">
                        <apex:inputCheckbox value="{!stgService.stgErr.Respect_Duplicate_Rule_Settings__c}" rendered="{!isEditMode}" id="cbxAllowDupes" html-aria-describedby="{!$Component.cbxAllowDupesHelp}" styleClass="slds-checkbox" />
                        <apex:inputCheckbox value="{!stgService.stgErr.Respect_Duplicate_Rule_Settings__c}" rendered="{!isReadOnlyMode}" disabled="true" id="cbxAllowDupesRO" html-aria-describedby="{!$Component.cbxAllowDupesHelp}" styleClass="slds-checkbox" />
                        <apex:outputPanel id="cbxAllowDupesHelp" layout="block">
                            <apex:outputText styleClass="slds-form-element__help" value="{!$Label.stgHelpRespectDuplicateRuleSettings}" />
                        </apex:outputPanel>
                    </div>
               </div>
            </div>
        </apex:outputPanel>
        <apex:outputPanel id="chatterGroupBox">
            <div class="slds-form_horizontal">
                <div class="slds-form-element">
                    <apex:outputLabel value="{!$Label.stgLabelSelectChatterGroup}" for="chatterGroupSearchBox" styleClass="slds-form-element__label" />
                    <div class="slds-form-element__control">
                        <c:UTIL_Typeahead searchBoxId="chatterGroupSearchBox" object="CollaborationGroup" primaryField="Name" searchScope="NAME" placeholder="{!$Label.stgLabelTypeAhead}" minSearchLength="2" destinationForSelectedId="groupId" stealFocus="false" styleClass="slds-input" />
                        <apex:outputPanel layout="block">
                            <apex:outputText styleClass="slds-form-element__help" value="{!$Label.stgHelpChatterGroup}" />
                        </apex:outputPanel>
                    </div>
                </div>
            </div>
            <apex:inputHidden id="groupId" value="{!groupId}" />
        </apex:outputPanel>
        <apex:outputPanel id="commandButtons">
            <div class="slds-grid slds-grid_align-center slds-grid_vertical-align-center slds-m-around_large">
                <apex:commandButton id="saveNotif" value="{!$Label.stgBtnSave}" status="statusLoad" action="{!saveSettings}" rendered="{!isEditMode}" immediate="false" rerender="fields, commandButtons, saveError" styleClass="slds-button slds-button_small slds-button_brand" />
                <apex:commandButton id="cancelNotif" value="{!$Label.stgBtnCancel}" status="statusLoad" action="{!cancelEdit}" rendered="{!isEditMode}" immediate="true" rerender="fields, commandButtons, saveError" styleClass="slds-button slds-button_small slds-button_neutral" />
            </div>
        </apex:outputPanel>
    </apex:form>
</apex:page>